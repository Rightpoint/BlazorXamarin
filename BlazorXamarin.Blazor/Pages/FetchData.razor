@page "/fetchdata"

@using BlazorXamarin.Application.Models
@using BlazorXamarin.Application.Contracts

@inject ITranslationService _translationService
@inject IWeatherForecastService _weatherForcastService

<h1>@_translationService["FetchData_Header"]</h1>

<p>@_translationService["FetchData_Description"]</p>

@if (forecasts == null)
{
    <p><em>@_translationService["FetchData_Loading"]</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>@_translationService["FetchData_Header_Date"]</th>
                <th>@_translationService["FetchData_Header_TempC"]</th>
                <th>@_translationService["FetchData_Header_TempF"]</th>
                <th>@_translationService["FetchData_Header_Summary"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@_translationService[$"FetchData__Summary_{forecast.Summary}"]</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    IEnumerable<WeatherForecast> forecasts;

    protected override async Task OnInitAsync()
    {
        forecasts = await _weatherForcastService.GetWeatherForecastsAsync();
    }
}
